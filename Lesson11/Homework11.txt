CREATE TABLE Table2
(
	Function_name NVARCHAR (50),
	Function_count INT
)


--Первое решение 

MERGE Table2 target
USING (SELECT Function_name, COUNT (Function_name) AS Function_count
FROM   
   (SELECT a, b, c, d, e, f, g, h, i 
   FROM table1) p  
UNPIVOT  
   (Function_name FOR Worker IN   
      (a, b, c, d, e, f, g, h, i)  
)AS unpvt
GROUP BY Function_name)
 AS source ON target.Function_name=source. Function_name
WHEN NOT MATCHED BY TARGET
	THEN INSERT (Function_name, Function_count)
	VALUES (source.Function_name, Function_count);

/*Тогда зачем нам MEGRE (это можно через простой INSERT вставить), подумала я и поняла, 
что это решение, возможно, не подойдет*/

--Второе решение

MERGE [Table2] target
USING (SELECT a FROM [Table1]) source
	ON target.[Function_name]=source.a
WHEN NOT MATCHED BY TARGET AND source.a IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.a, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT b FROM [Table1]) source
	ON target.[Function_name]=source.b
WHEN NOT MATCHED BY TARGET AND source.b IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.b, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT c FROM [Table1]) source
	ON target.[Function_name]=source.c
WHEN NOT MATCHED BY TARGET AND source.c IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.c, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT d FROM [Table1]) source
	ON target.[Function_name]=source.d
WHEN NOT MATCHED BY TARGET AND source.d IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.d, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT e FROM [Table1]) source
	ON target.[Function_name]=source.e
WHEN NOT MATCHED BY TARGET AND source.e IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.e, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT f FROM [Table1]) source
	ON target.[Function_name]=source.f
WHEN NOT MATCHED BY TARGET AND source.f IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.f, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT g FROM [Table1]) source
	ON target.[Function_name]=source.g
WHEN NOT MATCHED BY TARGET AND source.g IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.g, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

MERGE [Table2] target
USING (SELECT h FROM [Table1]) source
	ON target.[Function_name]=source.h
WHEN NOT MATCHED BY TARGET AND source.h IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.h, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;

GO

	MERGE [Table2] target
USING (SELECT i FROM [Table1]) source
	ON target.[Function_name]=source.i
WHEN NOT MATCHED BY TARGET AND source.i IS NOT NULL
	THEN INSERT ([Function_name],[Function_count])
	VALUES (source.i, '1')
WHEN MATCHED
	THEN UPDATE SET target.[Function_count]= target.[Function_count]+ 1;